00100 03000000   Reg0 = 0
00101 03500001   Reg5 = 1
00102 03700300   Reg7 = 300
00103 03800400   Reg8 = 400
00104 0C000200   jump to subroutine
00105 03700500   Reg7 = 500
00106 03800600   Reg8 = 600
00107 0C000200   jump to subroutine
00108 00000000   Halt

00200 03600005   Reg6 = 5
00201 04100007   Reg1 = mem[Reg7]
00202 04200008   Reg2 = mem[Reg8]
00203 06600005   Reg6 = Reg6 - Reg5
00204 07100002   Reg1 = Reg1 x Reg2
00205 05000001   Reg0 = Reg0 + Reg1
00206 05700005   Reg7 = Reg7 + Reg5
00207 05800005   Reg8 = Reg8 + Reg5
00208 0B60020A   jump to address 20A if Reg6 = 0
00209 0A000201   jump to address 201
0020A 0D000000   Return from subroutine

00300 0000000A   Vector X
00301 00000005
00302 00000012
00303 00000004
00304 00000008

00400 0000000B   Vector Y
00401 0000000C
00402 00000007
00403 00000001
00404 00000003

00500 00000004   Vector Z
00501 00000005
00502 0000000F
00503 0000000C
00504 0000000B

00600 00000005   Vector V
00601 0000000C
00602 0000000B
00603 0000000F
00604 00000005

